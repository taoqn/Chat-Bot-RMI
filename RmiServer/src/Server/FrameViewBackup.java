/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Server;

import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import rmiserver.*;

/**
 *
 * @author DinhTao
 */
public class FrameViewBackup extends javax.swing.JFrame {

    private FrameServer fs;
    private Hashtable ht;

    /**
     * Creates new form FrameViewBackup
     */
    public FrameViewBackup(FrameServer f) {
        initComponents();
        this.setLocationRelativeTo(null);
        fs = f;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinnerDay = new javax.swing.JSpinner();
        jSpinnerMonth = new javax.swing.JSpinner();
        jSpinnerYear = new javax.swing.JSpinner();
        jButtonChon = new javax.swing.JButton();
        jComboBoxBackup = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jKhungHienThi = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Xem Lại");
        setType(java.awt.Window.Type.UTILITY);

        jSpinnerDay.setModel(new javax.swing.SpinnerNumberModel(27, 1, 31, 1));
        jSpinnerDay.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerDayStateChanged(evt);
            }
        });

        jSpinnerMonth.setModel(new javax.swing.SpinnerNumberModel(11, 1, 12, 1));
        jSpinnerMonth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMonthStateChanged(evt);
            }
        });

        jSpinnerYear.setModel(new javax.swing.SpinnerNumberModel(2016, 2015, 2100, 1));
        jSpinnerYear.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerYearStateChanged(evt);
            }
        });

        jButtonChon.setText("Chọn");
        jButtonChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChonActionPerformed(evt);
            }
        });

        jComboBoxBackup.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBackupItemStateChanged(evt);
            }
        });

        jKhungHienThi.setEditable(false);
        jKhungHienThi.setColumns(20);
        jKhungHienThi.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jKhungHienThi.setRows(5);
        jScrollPane1.setViewportView(jKhungHienThi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jComboBoxBackup, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jSpinnerDay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerYear, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonChon, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 186, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxBackup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinnerDayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerDayStateChanged
        // TODO add your handling code here:
        setDay();
    }//GEN-LAST:event_jSpinnerDayStateChanged

    private void jSpinnerMonthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerMonthStateChanged
        // TODO add your handling code here:
        setDay();
    }//GEN-LAST:event_jSpinnerMonthStateChanged

    private void jSpinnerYearStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerYearStateChanged
        // TODO add your handling code here:
        setDay();
    }//GEN-LAST:event_jSpinnerYearStateChanged

    private void jButtonChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChonActionPerformed
        // TODO add your handling code here:
        int y = Integer.parseInt(jSpinnerYear.getValue().toString());
        int m = Integer.parseInt(jSpinnerMonth.getValue().toString());
        int d = Integer.parseInt(jSpinnerDay.getValue().toString());

        String ngay = "" + d;
        String thang = "" + m;

        if (d < 10) {
            ngay = "0" + d;
        }

        if (m < 10) {
            thang = "0" + m;
        }

        try {
            ht = fs.serverBK.getDataBackup(ngay + "/" + thang + "/" + y, "Server");
            jComboBoxBackup.removeAllItems();
            if (!ht.isEmpty()) {
                Enumeration names = ht.keys();
                int i = 1;
                while (names.hasMoreElements()) {
                    String str = (String) names.nextElement();
                    jComboBoxBackup.addItem(str);
                    if (i == 1) {
                        jKhungHienThi.setText((String) ht.get(str));
                    }
                    i++;
                }
            } else {
                jKhungHienThi.setText("");
                JOptionPane.showMessageDialog(this, "Dữ liệu không tồn tại !");
            }

        } catch (RemoteException ex) {
            Logger.getLogger(FrameViewBackup.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonChonActionPerformed

    private void jComboBoxBackupItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBackupItemStateChanged
        // TODO add your handling code here:
        if (jComboBoxBackup.getItemCount() > 0) {
            jKhungHienThi.setText((String) ht.get(jComboBoxBackup.getSelectedItem().toString()));
        }
    }//GEN-LAST:event_jComboBoxBackupItemStateChanged

    public void setDay() {
        int y = Integer.parseInt(jSpinnerYear.getValue().toString());
        int m = Integer.parseInt(jSpinnerMonth.getValue().toString());
        int d = Integer.parseInt(jSpinnerDay.getValue().toString());
        switch (m) {
            case 2:
                if (y % 4 == 0 && d > 29) {
                    jSpinnerDay.setValue(29);
                }
                if (y % 4 != 0 && d > 28) {
                    jSpinnerDay.setValue(28);
                }
                break;
            case 4:
                if (d > 30) {
                    jSpinnerDay.setValue(30);
                }
                break;
            case 6:
                if (d > 30) {
                    jSpinnerDay.setValue(30);
                }
                break;
            case 9:
                if (d > 30) {
                    jSpinnerDay.setValue(30);
                }
                break;
            case 11:
                if (d > 30) {
                    jSpinnerDay.setValue(30);
                }
                break;
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonChon;
    private javax.swing.JComboBox<String> jComboBoxBackup;
    private javax.swing.JTextArea jKhungHienThi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerDay;
    private javax.swing.JSpinner jSpinnerMonth;
    private javax.swing.JSpinner jSpinnerYear;
    // End of variables declaration//GEN-END:variables
}
